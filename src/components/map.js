import React from "react"
import { StaticQuery, graphql } from "gatsby"
import PropTypes from "prop-types"
import mapboxgl from 'mapbox-gl'
import Helmet from "react-helmet"

const WestHoxtonGeoJSON = { "type": "Polygon", "coordinates": [ [ [ -0.085020708084412, 51.526203393884856 ], [ -0.08629901946919, 51.52590142641322 ], [ -0.086456280417553, 51.525864436466414 ], [ -0.086795343036162, 51.525789057712018 ], [ -0.087032195277096, 51.525849557582482 ], [ -0.087294445969044, 51.525919460983609 ], [ -0.087439867630644, 51.525957881536115 ], [ -0.087804086139058, 51.526107659050325 ], [ -0.087837852563401, 51.526232271626299 ], [ -0.088131905659778, 51.52681709774302 ], [ -0.088310224768959, 51.527069116531138 ], [ -0.088484724755518, 51.52723926398609 ], [ -0.088552240668479, 51.52731588002932 ], [ -0.088598211496437, 51.52735348779126 ], [ -0.088662989175068, 51.52739050273015 ], [ -0.088780379323805, 51.527442759365421 ], [ -0.089049999702994, 51.527547031439596 ], [ -0.089176739240309, 51.527583257896652 ], [ -0.089601252535427, 51.527704344562999 ], [ -0.095405290443862, 51.529193431256225 ], [ -0.095141971023806, 51.529666702381007 ], [ -0.095093481035842, 51.529791774486704 ], [ -0.095081955266933, 51.529860001633409 ], [ -0.095083493879903, 51.529925653250821 ], [ -0.095112813467703, 51.53005198891681 ], [ -0.095317651308061, 51.530464447622009 ], [ -0.095524856068788, 51.530786146727863 ], [ -0.095895194616921, 51.531309261854247 ], [ -0.096261372652205, 51.531861075307724 ], [ -0.097033559383957, 51.532982336024801 ], [ -0.096552458952014, 51.533110368914954 ], [ -0.096163850546166, 51.533232618852345 ], [ -0.09601171220857, 51.533283190229476 ], [ -0.095045560063976, 51.533633575258882 ], [ -0.095049725045722, 51.533704664108093 ], [ -0.094553191449384, 51.533891681932275 ], [ -0.094484005149694, 51.533854597855871 ], [ -0.093986187530775, 51.534038086251996 ], [ -0.093779244091148, 51.53412552210186 ], [ -0.093284527981735, 51.534334229841534 ], [ -0.092548217339155, 51.534668462936608 ], [ -0.09198160892029, 51.534944319679234 ], [ -0.091588493490182, 51.535136693176369 ], [ -0.091375087168828, 51.535241999354511 ], [ -0.090772949023135, 51.535502888673648 ], [ -0.09025759601684, 51.535757995579836 ], [ -0.089718593992057, 51.535992847931972 ], [ -0.089690510213614, 51.536007673413899 ], [ -0.089208128730004, 51.535373036411457 ], [ -0.088347962986541, 51.534221521921509 ], [ -0.087945521742937, 51.533674486136945 ], [ -0.087695196873096, 51.533352970752638 ], [ -0.086623501541813, 51.533670011325491 ], [ -0.086413437479489, 51.533729514566666 ], [ -0.08633490711101, 51.533745314816272 ], [ -0.086278005302666, 51.533727305199498 ], [ -0.086252816685722, 51.533503043827935 ], [ -0.086225964884251, 51.53314552449924 ], [ -0.08500020246722, 51.533150782169521 ], [ -0.084469622237957, 51.533151109084081 ], [ -0.08403565964207, 51.533149415597947 ], [ -0.0835198625717, 51.533174253248113 ], [ -0.083032971774219, 51.533198660862176 ], [ -0.083054813962526, 51.532574034922 ], [ -0.083047573174814, 51.532268168194676 ], [ -0.083000490284747, 51.531843880345633 ], [ -0.08295521426621, 51.531410543097067 ], [ -0.082926016856999, 51.531075549405649 ], [ -0.082942097796289, 51.531001194740263 ], [ -0.082932181000947, 51.53072225374811 ], [ -0.082944761154728, 51.530561448642061 ], [ -0.082983658073751, 51.530357113537676 ], [ -0.083036848285666, 51.530188880585456 ], [ -0.083112522181145, 51.530000429281124 ], [ -0.083150213230119, 51.529960590418838 ], [ -0.083246691979535, 51.529893753436291 ], [ -0.083429173461093, 51.529771773740322 ], [ -0.083486729010572, 51.529533490696565 ], [ -0.083548016553211, 51.529243127084996 ], [ -0.083585271314788, 51.52914574481688 ], [ -0.083623083083471, 51.529069049108287 ], [ -0.083629027215894, 51.528686892647784 ], [ -0.083631918980736, 51.528343432506752 ], [ -0.083627290380896, 51.528077163853624 ], [ -0.083668868403486, 51.526914269695901 ], [ -0.083692469353883, 51.526799493923214 ], [ -0.083741683843743, 51.52655307283348 ], [ -0.084640516870015, 51.526400450438025 ], [ -0.085076302520464, 51.526320362981906 ], [ -0.085020708084412, 51.526203393884856 ] ] ] }

class Map extends React.Component {
  state = {
    lng: -0.0914134,
    lat: 51.5308858,
    zoom: 14,
  }
  
  renderMap = (ref) => {
    mapboxgl.accessToken = this.props.data.site.siteMetadata.credentials.mapboxgl.accessToken
    
    const map = new mapboxgl.Map({
      container: ref,
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [this.state.lng, this.state.lat],
      zoom: this.state.zoom
    })
    
    map.on('load', function() {
      map.addSource('westhoxton', {
        'type': 'geojson',
        'data': WestHoxtonGeoJSON,
      })
    
      map.addLayer({
        'id': 'wards-layer',
        'type': 'fill',
        'source': 'westhoxton',
        'layout': {},
        'paint': {
          'fill-color': '#088',
          'fill-opacity': 0.5,
          'fill-outline-color': "#e30346"
        }
      })
      
      map.addControl(new mapboxgl.FullscreenControl())
        
      // Change the cursor to a pointer when the mouse is over the states layer.
      map.on('mouseenter', 'wards-layer', function() {
        map.getCanvas().style.cursor = 'pointer'
      })
    
      // Change it back to a pointer when it leaves.
      map.on('mouseleave', 'wards-layer', function() {
        map.getCanvas().style.cursor = ''
      })
    })
  }
  
  render() {
    return (
      <>
        <Helmet>
          <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet' />
        </Helmet>
        <div className="row justify-content-center">
          <div
          ref={el => this.renderMap(el)}
          className="col-10 map"
          >
        </div>
        </div>
      </>
    )  
  }
}

export default props => (
  <StaticQuery
    query={graphql`
      query {
        site {
          siteMetadata {
            credentials {
              mapboxgl {
                accessToken
              }
            }
          }
        }
      }
    `}
    render={data => <Map data={data} {...props} />}
  />
)

Map.propTypes = {
  data: PropTypes.shape({
    site: PropTypes.shape({
      siteMetadata: PropTypes.shape({
        credentials: PropTypes.shape({
          mapboxgl: PropTypes.shape({
            accessToken: PropTypes.string.isRequired
          }).isRequired,
        }).isRequired,
      }).isRequired,
    }).isRequired,
  }).isRequired,
}